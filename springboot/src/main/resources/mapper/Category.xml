<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~ This project is licensed under the Apache-2.0 license - see the LICENSE file for details.
  ~ Copyright (c) 2024-present, Zhai JinPei
  -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.CategoryMapper">
    <delete id="deleteByName">
        delete from category
        where name = #{ name }
    </delete>

    <select id="getByName" resultType="com.example.springboot.entity.Category">
        select *
        from category
        where name = #{ name }
    </select>

    <update id="updateByName">
        update category
        set name = #{ name }, remark = #{ remark }, uDate = #{ uDate }
        where id = #{ id }
    </update>

    <insert id="save">
        insert into category(name, remark, cDate, pid)
        values (#{ name }, #{ remark}, #{ cDate }, #{ pid })
    </insert>

    <resultMap id="categoryMap" type="com.example.springboot.entity.Category">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
        <result column="remark" property="remark"></result>
        <result column="cDate" property="cDate"></result>
        <result column="uDate" property="uDate"></result>
        <result column="pid" property="pid"></result>
        <collection property="children" ofType="com.example.springboot.entity.Category" column="id" select="selectById"></collection>
    </resultMap>

    <select id="selectById" resultType="com.example.springboot.entity.Category">
        select *
        from category
        where pid = #{ id }
    </select>

    <select id="listByCondition" resultMap="categoryMap">
        select c1.*
        from category c1 left join category c2
        on c1.id = c2.pid
        <where>
            isnull(c1.pid)
            <if test="name != null and name != ''">
                and (c1.name like concat('%', #{ name }, '%')) or (c2.name like concat('%', #{ name }, '%'))
            </if>
        </where>
        group by c1.id
        order by id desc
    </select>

    <select id="tree" resultType="com.example.springboot.entity.Category">
        select *
        from category
    </select>


</mapper>
